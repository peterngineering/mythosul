#!/bin/sh
echo "Enabling 10 second delay to frontend start/stop"
sleep 10
#todo add a stamp for first run detection and force a automatic restart till the frontend 1strun exit bug is fixed
#todo add a stamp for netdev being used and decrease/remove sleep time if eth0 detected
#and only run sleep if using wifi

PROG="/usr/bin/mythfrontend"
test -x ${PROG} || exit 0
# shellcheck source=/dev/null
[ -r "/etc/default/$PROG" ] && . "/etc/default/$PROG"
export MYTHCONFDIR="/root/.mythtv"
test -d ${MYTHCONFDIR} || exit 0

if [ -e "/sys/class/net/eth0/operstate" ] && [[ "$(cat /sys/class/net/eth0/operstate)" == "up" ]]; then
	echo "INFO: ETH0 is up"
sleep 5
elif [ -e "/sys/class/net/wlan0/operstate" ] && [[ "$(cat /sys/class/net/wlan0/operstate)" == "up" ]]; then
    	echo "INFO: WLAN0 is up"
else 
    echo "NO NETWORK!"
    echo "PLUGIN IN ETHERNET or "
    echo "for WifFi change: ssid/psk"
    echo "in /etc/wpa_supplicant.conf"
    echo "then reboot"
    exit 1
fi


# export QT_QPA_EGLFS_DEBUG=1
# export QT_LOGGING_RULES=qt.qpa.*=true
export QT_QPA_PLATFORM=eglfs
export QT_QPA_EGLFS_KMS_ATOMIC=1
export QT_QPA_EGLFS_ALWAYS_SET_MODE=1
export QT_QPA_EGLFS_INTEGRATION=eglfs_kms

echo "Here are your rpi2 mode options for the card0-HDMI-A-1 device, top  is best generally"
cat /sys/class/drm/card0-HDMI-A-1/modes
#presets
export QT_QPA_EGLFS_KMS_CONFIG=/home/mythtv/mythfrontend720p.json
#export QT_QPA_EGLFS_KMS_CONFIG=/home/mythtv/mythfrontend1080p.json

# input options for kbd/mouse
#export QT_QPA_EVDEV_KEYBOARD_PARAMETERS=grab=1
#export QT_QPA_EVDEV_MOUSE_PARAMETERS=grab=1
# if kbd/mouse issues, if so ;use below and comment out above 2 lines
#below is the default for now
export QT_QPA_EGLFS_NO_LIBINPUT=1
export QT_QPA_ENABLE_TERMINAL_KEYBOARD=1
# rotation
# export QT_QPA_EGLFS_ROTATION=180
# 


case "$1" in
    start) 
	echo performance > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor
    	echo "Starting mythfrontend"
    	${PROG} --logpath=/tmp
	;;

    stop)
        echo "Stopping mythfrontend"
	echo powersave > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor
    	killall -q $(basename ${PROG})
	;;
    *)

        echo "Usage: $0 {start|stop}"
        exit 1
esac
exit $?
